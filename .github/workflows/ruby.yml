name: Ruby

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        postgres_version: [9, 10, 11, 12]
        ruby_version: ['2.5', '2.6', '3.2']

    services:
      postgres:
        image: postgres:${{ matrix.postgres_version }}
        ports: ["5432:5432"]
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://postgres@localhost/que_locks"
      PGHOST: 127.0.0.1
      PGUSER: postgres

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby_version }}
      - name: Install system dependencies
        run: |
          sudo apt-get -yqq install libpq-dev postgresql-client
          createdb que_locks
      - name: Build and test with Rake
        run: |
          gem install bundler -v 2.3.26
          bundle install --jobs 4 --retry 3
          bundle exec rake
  lint:
    runs-on: ubuntu-latest

    env:
      PGHOST: 127.0.0.1
      PGUSER: postgres

    steps:
      - uses: actions/checkout@v3
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install system dependencies
        run: |
          sudo apt-get -yqq install libpq-dev postgresql-client
      - name: Bundle
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
      - name: Check code with rubocop
        run: |
          bundle exec rubocop
      - name: Check code formatting with rufo
        run: |
          bundle exec rufo --check lib test

  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint]
    environment: rubygems

    # Allow GITHUB_TOKEN write access to the repo
    permissions:
      contents: write

    # Only deploy if running on master
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install semantic release
        run: npm install semantic-release semantic-release-rubygem

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}
        run: npx semantic-release
